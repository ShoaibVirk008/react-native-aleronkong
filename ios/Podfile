$RNFirebaseAsStaticFramework = true
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'


# platform :ios, '12.4'
platform :ios, '13.0'

install! 'cocoapods', :deterministic_uuids => false



# React Native Maps dependencies
# rn_maps_path = '../node_modules/react-native-maps'
# pod 'react-native-google-maps', :path => rn_maps_path
pod 'GoogleMaps'
# pod 'react-native-video', :path => '../node_modules/react-native-video/react-native-video.podspec'

production = ENV["PRODUCTION"] == "1"

target 'AleronKong' do
  use_frameworks!
 
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :production => production,
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )
  
  target 'AleronKongTests' do
    inherit! :complete
    
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end

#   pre_install do |installer|
#     internalInstaller = installer.installer
#     def internalInstaller.verify_no_static_framework_transitive_dependencies; end
#   end

#    pre_install do |installer|
#      def installer.verify_no_static_framework_transitive_dependencies; end
# end

 
end
